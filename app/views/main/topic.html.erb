<% provide(:in_topic, true) -%>
<% provide(:topic_name, @topic ? @topic.name : "Uncategorized") -%>
<div class=stream id=stream>
    <div class=post_list id=stream_post_list>
    <% for p in @posts -%>
        <%= render 'post/view', post: p %>
    <% end -%>
    </div>
    <div class=error_message id=error_message></div>
    <div class=new_post_form id=stream_post_form>
    <%= form_tag('/post/new') do -%>
        <textarea name=content tabindex=1 id=new_post_content autofocus></textarea>
        <button type=submit tabindex=2 id=new_post_submit>Post</button>
        <% if @topic -%>
            <input type=hidden name=topic value="<%= @topic.id %>"/>
        <% end -%>
    <% end -%>
    </div>
    <br>
</div>
<div class=pinned_posts>
    <div class=post_list id=pinned_post_list>
    <% for p in @pinned -%>
        <%= render 'post/view', post: p %>
    <% end -%>
    </div>
</div>
<script>
    var stream = document.getElementById('stream');
    var stream_post_list = document.getElementById('stream_post_list');
    var error_message = document.getElementById('error_message');

    function scroll_stream () {
        stream.scrollTop = stream.scrollHeight;
    }
    scroll_stream();

    var update_delay = 4000;
    var latest = <%= Post.last ? Post.last.id : 0 %>;

    function handle_update () {
        if (this.readyState == this.DONE) {
            if (this.status == 200) {
                if (this.responseXML != null) {
                    html = this.responseXML;
                    var new_posts = html.getElementById("new_posts");
                    if (new_posts == null) {
                        make_error("There was an error when loading new posts:\nThe server didn't include new_posts");
                        return;
                    }
                    new_latest = html.getElementById("new_latest");
                    if (new_latest != null) latest = parseInt(new_latest.textContent);
                    var wants_scroll = (stream.scrollTop > stream.scrollHeight - stream.offsetHeight - 120);
                    var added_posts = false;
                    while (new_posts.firstChild != null) {
                        if (new_posts.firstChild.nodeType == new_posts.firstChild.ELEMENT_NODE)
                            added_posts = true;
                        stream_post_list.appendChild(new_posts.firstChild);
                    }
                    if (added_posts) update_delay = 4000;
                    else if (update_delay < 32000) update_delay += 4000;
                    setTimeout( "request_update()", update_delay );
                    if (wants_scroll && added_posts) scroll_stream();
                }
                else {
                    make_error("There was an error when loading new posts:\nThe server didn't response with valid XML");
                    return;
                }
            }
            else if (this.status != 0) {
                make_error("There was an error when loading new posts:\nThe server returned " + this.status);
                return;
            }
        }
    }
    function make_error (mess) {
        error_message.textContent = mess;
        var wants_scroll = (stream.scrollTop > stream.scrollHeight - stream.offsetHeight - 120);
        if (wants_scroll) scroll_stream();
    }
    function request_update () {
        var client = new XMLHttpRequest();
        client.onreadystatechange = handle_update;
        <% if @topic -%>
        client.open("GET", "/post/list?topic=<%= @topic.id %>&since=" + latest);
        <% else -%>
        client.open("GET", "/post/list?since=" + latest);
        <% end -%>
        client.send();
    }
    setTimeout( "request_update()", update_delay );
</script>
